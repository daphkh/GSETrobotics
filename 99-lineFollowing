# Daphne, Bec, Grace, Anna
# GSET Robotics
# July 2, 2016

#PORTS DIRECTORY
#BAS1 - color sensor
#BBS1 - reflective light sensor
#BAM1 - motor RIGHT
#BBM1 - motor LEFT

from PiStorms import PiStorms
from time import sleep
from HiTechnicColorV2 import HiTechnicColorV2


######Major Vars###########
psm = PiStorms()
goOn = True
from HiTechnicColorV2 import HiTechnicColorV2
psm = PiStorms()
hc=HiTechnicColorV2()
psm.BAS1.activateCustomSensorI2C()

######Helper Methods######### 
def isRed(color):
    if color >= 7 and color <=9:
        return True
    return False

#####Main Method#######
#line following and termination by passing the red line
while goOn:
    #line following
    light = psm.BBS1.lightSensorNXT(True)
    color = hc.get_colornum()
    if isRed(color):
        goOn = False
        psm.led(1,255,0,0)
    #termination by pressing the button
    if light < 600: #if the light intensity is high (white, way too right of the line)   left
        psm.BAM1.setSpeed(-45)
        psm.BBM1.setSpeed(10)
    elif light > 750:#if very black, turn sharp        right B
        psm.BAM1.setSpeed(50)
        psm.BBM1.setSpeed(-60)
    elif light > 680: #if the light intensiy is low (black, on the line)      right B
        psm.BAM1.setSpeed(5)
        psm.BBM1.setSpeed(-45)
    else: # light <= 400 and light >= 200, mid light intensity means it is by the line           right 
        #go straight
        psm.BAM1.setSpeed(-40)
        psm.BBM1.setSpeed(-40)
    sleep(.03)
    #termination by pressing the button
    if (psm.isKeyPressed()):
        goOn = False
        break

sleep(.5)
psm.BAM1.brake()
psm.BBM1.brake()
exit = True
