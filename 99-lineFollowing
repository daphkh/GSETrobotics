# Daphne, Bec, Grace, Anna
# GSET Robotics
# July 2, 2016

#PORTS DIRECTORY
#BAS1 - color sensor
#BBS1 - reflective light sensor
#BAM1 - motor RIGHT
#BBM1 - motor LEFT
#BAS2 - infrared sensor

from PiStorms import PiStorms
from time import sleep
from HiTechnicColorV2 import HiTechnicColorV2

 
######Major Vars###########
psm = PiStorms()
goOn = True
from HiTechnicColorV2 import HiTechnicColorV2
psm = PiStorms()
hc=HiTechnicColorV2()
psm.BAS1.activateCustomSensorI2C()

######Helper Methods######### 
def isRed(color):
    if color >= 7 and color <=9:
        return True
    return False

def isPurple(color):
    if color >1 and color != 4 and color !=3:
        return True
    return False

def isBombRoom(color):
    if color >=3 and color <=5:
        psm.BAM1.brake()
        psm.BBM1.brake()
        psm.led(1,255,0,255)
        sleep(2)
        return True
    return False


#####Main Method#######
#line following and termination by passing the red line
while goOn:
    #line following
    light = psm.BBS1.lightSensorNXT(True)
    color = hc.get_colornum()
    if isRed(color):
        goOn = False
        psm.led(1,255,0,0)
  #line following ifs
    if light < 600: #if the light intensity is high (white, way too right of the line)   left
        psm.BAM1.setSpeed(-45)
        psm.BBM1.setSpeed(10)
    elif light > 750:#if very black, turn sharp        right B
        psm.BAM1.setSpeed(80)
        psm.BBM1.setSpeed(-80)
        sleep(.07)
    elif light > 680: #if the light intensiy is low (black, on the line)      right B
        psm.BAM1.setSpeed(45)
        psm.BBM1.setSpeed(-45)
    else: # mid light intensity means it is by the line           right 
        #go straight
        psm.BAM1.setSpeed(-30)
        psm.BBM1.setSpeed(-30)
    sleep(.03)
    #termination by pressing the button
    if (psm.isKeyPressed()):
        goOn = False
        break
        
#now in the house - break and turn on light
psm.BAM1.brake()
psm.BBM1.brake()
sleep(1.5)
psm.led(1,0,0,0)
#go into first room (straight, turn right, straight)
psm.BAM1.setSpeed(-25)
psm.BBM1.setSpeed(-25)
sleep(1)
psm.BAM1.runDegs(55,40,False,False)
sleep(2.9)
checkBombRoom(hc.get_colornum())
psm.BBM1.setSpeed(-20)
psm.BAM1.setSpeed(-20)
sleep(1)
#go into second room (go backwards)
psm.BBM1.setSpeed(90)
psm.BAM1.setSpeed(90)
sleep(1.9)
if not checkBombRoom(hc.get_colornum()):
    psm.BBM1.setSpeed(0)
    psm.BAM1.setSpeed(0)
    sleep(.5)
#go into third room (go straight, turn left)
psm.BAM1.setSpeed(-40)
psm.BBM1.setSpeed(-40)
sleep(1.6)
psm.BBM1.runDegs(30,40,False,False)
sleep(1.4)
checkBombRoom(hc.get_colornum()):
psm.BAM1.setSpeed(-40)
psm.BBM1.setSpeed(-40)
sleep(.5)
psm.BAM1.brake()
psm.BBM1.brake()
exit = True
#done







